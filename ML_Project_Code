# Android Malware Detection with LAMDA (Analisi Concept Drift)

# Questo notebook dimostra come caricare, esplorare e utilizzare il dataset LAMDA
# per la rilevazione di malware Android, concentrandosi sull'analisi del concept drift
# attraverso l'addestramento del modello su 3 anni consecutivi e il test sull'anno successivo.

# 1. Setup e Installazione delle Librerie Necessarie
# Assicurati di avere queste librerie installate nel tuo ambiente Python.
# Puoi installarle decommentando e eseguendo le seguenti righe:
#!pip install datasets
#!pip install huggingface_hub[hf_xet]
#!pip install pandas scikit-learn numpy matplotlib
#!pip install scipy
#!pip install torch torchvision torchaudio --index-url https://download.pytorch.org/whl/cu118 # Per PyTorch con CUDA 11.8
                                                                                              # Sostituisci cu118 con la tua versione CUDA o cpu
import pandas as pd
import numpy as np
from datasets import load_dataset, load_from_disk
from sklearn.model_selection import StratifiedKFold, GridSearchCV
from sklearn.metrics import (
    classification_report,
    accuracy_score,
    precision_score,
    recall_score,
    f1_score,
    confusion_matrix,
    roc_curve,
    auc,
    roc_auc_score
)
import time
import matplotlib.pyplot as plt
import gc # Importa il garbage collector per la gestione della memoria
import os # Per controllare l'esistenza dei file
import shutil # Aggiunto shutil per la copia dei file

# Importazioni per PyTorch
import torch
import torch.nn as nn
import torch.optim as optim
from torch.utils.data import DataLoader, Dataset as TorchDataset
from scipy.sparse import csr_matrix, save_npz, load_npz, vstack # AGGIUNTO vstack
# Importa per la compatibilit√† con scikit-learn BaseEstimator
import sklearn.base

print("Librerie caricate con successo.")

# Determina il dispositivo (GPU se disponibile, altrimenti CPU)
device = torch.device("cuda" if torch.cuda.is_available() else "cpu")
print(f"Utilizzo del dispositivo: {device}")

# Monta Google Drive
from google.colab import drive
drive.mount('/content/drive')

# --- CONFIGURAZIONE PER IL CARICAMENTO DA GOOGLE DRIVE ---
# INSERISCI QUI IL PERCORSO ALLA CARTELLA DOVE HAI SALVATO I FILE CSV DEL 2022
DRIVE_2022_PATH = '/content/drive/MyDrive/lamda_dataset_2022'
# ---------------------------------------------------------

# --- PARAMETRO DI SOTTOCAMPIONAMENTO GLOBALE ---
# Imposta la frazione di dati da campionare per ogni anno.
# Ad esempio, 0.1 per usare il 10% dei dati. Imposta a 1.0 per usare tutti i dati.
SAMPLE_FRACTION = 0.1 # Come suggerito dal professore per gestire la memoria
# -----------------------------------------------

# --- DEFINIZIONE DEGLI ANNI PER L'ANALISI SPECIFICA ---
TRAIN_YEARS = [2013, 2014, 2016] # Esempio: addestra su 3 anni
TEST_YEAR = 2022 # Esempio: testa sull'anno successivo al periodo di training
# -------------------------------------------------------
